---
title: "Seminário LoggingLab"
author: "Sylvain Schmitt"
date: today
date-format: medium
format: 
  revealjs:
    theme: dark
    output-location: fragment
bibliography: references.bib
---

# Introdução

*Texto breve.*

::: notes
Notas.
:::

## O que o pacote faz?

Simulação de corte seletivo usando dados de inventário florestal.

![](https://ars.els-cdn.com/content/image/1-s2.0-S0304380023002697-ga1_lrg.jpg)

::: notes
Notas.
:::

## O que o pacote faz?

::::: columns
::: {.column width="30%"}
![](figs/Fig_Flowchart.jpg)
:::

::: {.column width="70%"}
-   preparação de dados
-   trilhas principais
-   áreas colhíveis
-   seleção de árvores
-   trilhas secundárias
-   corte de árvores
-   adjacência da trilha secundária
-   quantificação de volume
:::
:::::

::: notes
Notas.
:::

## Instalação do pacote

Usaremos o pacote LoggingLab para R [@Badouard2024] para simular a extração de madeira de impacto reduzido em uma floresta tropical. O pacote deve ser instalado a partir de seu repositório no Github, pois ainda não está no CRAN.

```{r install}
#| eval: false
#| echo: true
install.packages("devtools")
devtools::install_github("VincyaneBadouard/LoggingLab")
```

::: notes
Notas.
:::

## Outros pacotes R

Usaremos o `tidyverse` para manipular tabelas e criar gráficos, e o `sf` para manipular objetos espaciais.

```{r libs}
#| echo: true
library(LoggingLab)
library(tidyverse)
library(sf)
theme_set(theme_bw())
```

::: notes
Notas.
:::

# Entradas

Bla.

-   **Inventário**: inventários de árvores da parcela registrada
-   **Máscara do lote**: os limites da área a ser explorada
-   **Dados da espécie**: dados específicos para cada espécie
-   **Alometria volumétrica**: os parâmetros de alometria a serem calculados

::: notes
Notas.
:::

## Inventário

*O que é isso?*

::: notes
Notas.
:::

## Inventário

As colunas exigidas pelo `LoggingLab` são:

-   `Forest`: o nome da floresta para aplicar a fórmula de volume correspondente.
-   `idTree`: um identificador exclusivo para cada árvore.
-   `Xutm` e `Yutm`: as coordenadas de cada árvore.
-   `CodeAlive`: árvore viva ou morta.
-   `Family`, `Genus`, `Species`: dados botânicos.
-   `CircCorr`: circunferência de cada árvore.

::: notes
Notas.
:::

## Inventário

O inventário do lote 6 de Paracou está disponível dentro `LoggingLab`.

```{r p6}
#| echo: true
head(Paracou6_2016)
```

::: notes
Notas.
:::

## Inventário

```{r p6plot}
#| echo: true
Paracou6_2016 %>% 
  st_as_sf(coords = c("Xutm", "Yutm")) %>% 
  ggplot() + geom_sf()
```

::: notes
Notas.
:::

## Máscara do lote

A máscara do lote define os limites da área a ser registrada.

*Por que?*

::: notes
Notas.
:::

## Máscara do lote

A máscara do lote 6 de Paracou está disponível dentro `LoggingLab`.

```{r mask}
#| echo: true
ggplot(st_as_sf(PlotMask)) + geom_sf()
```

::: notes
Notas.
:::

## Dados de espécies {.smaller}

`SpeciesCriteria` contém dados específicos de cada espécie. As colunas são:

-   `CommercialLevel`: Nível de interesse econômico. 1: principal espécie econômica, 2 ou mais: espécies registradas com o objetivo de diversificação, 0: espécies cujo gênero é coberto por um nome comercial, mas que não são registradas.

-   `MinFD`: Diâmetro mínimo de corte, em centímetros.

-   `UpMinFD`: Diâmetro mínimo de corte aprimorado (caso de povoamento excessivamente rico), em centímetros.

-   `MaxFD`: Diâmetro máximo de corte, em centímetros.

-   `Aggregative`: Caráter agregador da espécie. Se for `TRUE`, as árvores isoladas não serão cortadas.

::: notes
Notas.
:::

## Dados de espécies

Dados de espécies de Guiana Francesa são disponível dentro `LoggingLab`.

```{r species}
#| echo: true
head(SpeciesCriteria)
```

::: notes
Notas.
:::

## Alometria volumétrica

`ForestZoneVolumeParametersTable` contém os parâmetros de alometria a serem calculados.

$$Volume = aCoef + bCoef \times DBH^2$$*Por que?*

::: notes
Notas.
:::

## Alometria volumétrica

Alometria volumétrica de Guiana Francesa são disponível dentro `LoggingLab`.

```{r allometry}
#| echo: true
head(ForestZoneVolumeParametersTable)
```

::: notes
Notas.
:::

# Simulação de registro detalhado

*Texto breve.*

::: notes
Notas.
:::

## Validar o inventário

As árvores que não estão na área registrada ou que são muito pequenas para serem consideradas são excluídas.

```{r prep}
#| echo: true
inventory <- inventorycheckformat(Paracou6_2016)
inventory <- cleaninventory(inventory, PlotMask, loggingparameters())
```

`loggingparameters()` define todos os parâmetros de registro. Consulte sua ajuda (`?loggingparameters`). Os valores padrão são os usados na Guiana Francesa.

::: notes
Notas.
:::

## Validar o inventário

Como os dados já estavam limpos, não houve muitas alterações.

```{r prepmap}
#| echo: true
inventory %>% 
  st_as_sf(coords = c("Xutm", "Yutm")) %>% 
  ggplot() + geom_sf()
```

::: notes
Notas.
:::

## Calcular as dimensões da árvore

Calcule as dimensões da árvore (altura da árvore, do tronco e da copa, diâmetro da copa, volume colhível, densidade da madeira e biomassa).

```{r dims}
#| echo: true
inventory <- addtreedim(inventory, ForestZoneVolumeParametersTable)
head(select(inventory, TreeHarvestableVolume, TrunkHeight, TreeHeight, CrownHeight,
            CrownDiameter, WoodDensity, AGB))
```

::: notes
Notas.
:::

## Calcular as dimensões da árvore

```{r dimsplot}
#| echo: true
inventory %>% 
  st_as_sf(coords = c("Xutm", "Yutm")) %>% 
  ggplot() + geom_sf(aes(col = TreeHarvestableVolume)) + 
  scale_color_viridis_c(trans = "log")
```

::: notes
Notas.
:::

## Principais trilhas de derrapagem

Gere a trilha principal do terreno inventariado, como linhas na borda e fora do terreno.

*Por que ?*

::: notes
Notas.
:::

## Principais trilhas de derrapagem

```{r maintrail}
#| echo: true
#| cache: true
MainTrails <- maintrailextract(DTMParacou)
ggplot(MainTrails) +
  tidyterra::geom_spatraster(data = terra::rast(DTMParacou)) + # add to pkg list
  geom_sf()
```

::: notes
Notas.
:::

## Definição de área colhível

Defina as zonas de colheita e as zonas acessíveis por máquinas dentro da parcela.

Por padrão, uma unidade de prospecção é uma área conectada a uma trilha de caminhão ou a uma trilha principal de skid, com uma inclinação de menos de 27%, evitando planícies e o sistema de água (buffer de 30 m).

::: notes
Notas.
:::

## Definição de área colhível

Usamos um cenário manual para poder alterar os argumentos facilmente. O guincho é definido como 2, ou seja, a garra é usada, se possível (6 m de extensão), e o cabo é usado até 40 m.

```{r harvareas}
#| echo: true
#| cache: true
HarvestableArea <- harvestableareadefinition(
  topography = DTMParacou,
  creekverticaldistance = CreekDistances$distvert,
  creekhorizontaldistance = CreekDistances$disthorz,
  maintrails = MainTrails,
  plotmask = PlotMask,
  scenario = "manual",
  winching = "2",
  advancedloggingparameters = loggingparameters()
)
```

::: notes
Notas.
:::

## Definição de área colhível {.smaller}

As áreas verdes claras podem ser colhidas. As verdes escuras podem ser colhidas por máquinas.

```{r harvareasplot}
#| echo: true
(base <- ggplot() +
  geom_sf(data = HarvestableArea$HarvestablePolygons, fill = "olivedrab", alpha = 0.1) +
  geom_sf(data = HarvestableArea$MachinePolygons, fill = "olivedrab", alpha = 0.5))
```

::: notes
Notas.
:::

## Seleção de árvores {.smaller .scrollable}

Selecionar árvores para colheita e árvores futuras e de reserva.

As árvores podem ser colhidas se:

-   Pertencem a espécies de primeira categoria econômica ou mais, se houver diversificação.
-   O DBH estiver entre o MinFD e o MaxFD.
-   Não estiverem isoladas (\>100 m por padrão) de outros indivíduos da mesma espécie no caso de espécies agregadas.
-   Estão localizadas em declives \< 22%.
-   Estão fora das trilhas principais.

Se o volume colhível for maior que o volume objetivo e a diversificação não tiver sido escolhida, o MinFD apenas da primeira espécie de classificação econômica será aumentado. Se a diversificação for permitida, o MinFD das espécies de primeiro e segundo níveis econômicos será aumentado. Em seguida, as árvores a serem colhidas são escolhidas em ordem decrescente de volume, até que o volume objetivo seja atingido.

::: notes
Notas.
:::

## Seleção de árvores {.smaller}

Se o volume extraível for muito baixo, a diversificação pode ser aplicada (`specieslax = TRUE`): as árvores de todas as classificações comerciais são selecionadas em ordem decrescente de volume até que o volume objetivo seja atingido, ou a extração pode continuar apesar de um volume objetivo não atingido ou ser abandonada (`objectivelax = FALSE`).

```{r treesel}
#| echo: true
#| warning: true
inventory <- inventory %>% 
  commercialcriteriajoin(SpeciesCriteria)
TreeSelection <- inventory %>% 
  treeselection(
    topography = DTMParacou,
    speciescriteria = SpeciesCriteria,
    scenario ="manual", 
    objective = 30,
    fuel = "2",
    winching = "2",
    diversification = TRUE, 
    specieslax = FALSE,
    objectivelax = TRUE,
    harvestablearea = HarvestableArea$HarvestableArea,
    plotslope = HarvestableArea$PlotSlope,
    maintrails = MainTrails,
    harvestablepolygons = HarvestableArea$HarvestablePolygons,
    advancedloggingparameters = loggingparameters()
  )
crs <- st_crs(HarvestableArea$HarvestablePolygons)
```

::: notes
Notas.
:::

## Seleção de árvores {.smaller}

*Bla.*

```{r harvest}
#| echo: true
base + geom_sf(data = TreeSelection$HarvestableTreesPoints, aes(colour = "Harvestable")) +
  geom_sf(data = TreeSelection$SelectedTreesPoints, aes(colour = "Selected")) +
  geom_sf(data = TreeSelection$FutureTreesPoints, aes(colour = "Future")) +
  geom_sf(data = TreeSelection$ReserveTreesPoints, aes(colour = "Reserve"))
```

::: notes
Notas.
:::

## Trilhas secundárias {.smaller .scrollable}

A partir das trilhas de arraste principais, desenhe trilhas de arraste secundárias nas zonas acessíveis às máquinas, permitindo coletar as árvores selecionadas com as máquinas escolhidas (argumento `winching`). O layout é otimizado para reduzir a distância percorrida, respeitando as restrições topográficas e evitando árvores a serem protegidas.

As trilhas de arraste (principal e secundária) permitem que a madeira seja transportada do talhão para as estradas de caminhões.

As trilhas de arraste secundárias:

-   têm 4 m de largura (`ScndTrailWidth`),
-   têm 22% de inclinação máxima em seu comprimento (`MaxTrailCenterlineSlope`),
-   têm 4% de inclinação lateral máxima, levada em conta se houver dados Lidar disponíveis (`MaxTrailCrossSlope`).

Elas evitam:

-   as árvores a serem cortadas
-   as árvores com um DBH de mais de 50 cm (`BigTrees`)
-   as árvores reservadas.

Eles se juntam, em ordem decrescente de prioridade:

1.  grupos em ordem decrescente de abundância de árvores,
2.  aqueles com a menor distância até a trilha mais próxima.

::: notes
Notas
:::

## Trilhas secundárias {.smaller .scrollable}

```{r 2trail}
#| echo: true
#| cache: true
ScndTrailOutputs <- secondtrailsopening(
  topography = DTMParacou,
  plotmask = PlotMask,
  maintrails = MainTrails,
  plotslope = HarvestableArea$PlotSlope,
  harvestablepolygons = HarvestableArea$HarvestablePolygons,
  machinepolygons = HarvestableArea$MachinePolygons,
  treeselectionoutputs = TreeSelection,
  scenario = "manual",
  winching = "2",
  fuel = "0",
  advancedloggingparameters = loggingparameters()
)
inventory <- ScndTrailOutputs$inventory
```

Essa etapa pode levar algum tempo.

::: notes
Notas.
:::

## Trilhas secundárias {.smaller .scrollable}

*Bla.*

```{r tracksplot}
#| echo: true
base + geom_sf(data = st_as_sf(SecondaryTrails$SmoothedTrails)) +
  geom_sf(data = TreeSelection$SelectedTreesPoints, aes(colour = "Selected"))
```

::: notes
Notas
:::

## Corte de árvores {.smaller .scrollable}

Simular a derrubada da árvore, com o sucesso ou fracasso da direção da queda da árvore, pé para a trilha, com um ângulo para a trilha e evitando as árvores a serem protegidas, conforme desejado. Se a madeira combustível for explorada, a árvore será direcionada com a copa para a trilha (se a orientação for bem-sucedida) para que possa ser recuperada com uma garra.

A derrubada da árvore cria uma árvore (incluindo a copa) no solo, com dimensões calculadas por alometrias específicas (`advancedloggingparameters`). O processo depende do cenário. Por exemplo, cenários sem madeira para combustível implicam:

-   com 60% (`TreefallSuccessProportion`) de probabilidade: base da árvore em direção à trilha mais próxima.
-   com 40% de probabilidade: queda aleatória.

```{r treefelling}
#| echo: true
#| cache: true
inventory <- inventory %>% 
  treefelling(
    scenario = "manual", 
    fuel = "0",
    winching = "2", 
    directionalfelling = "2",
    maintrailsaccess = ScndTrailOutputs$MainTrailsAccess,
    scndtrail = ScndTrailOutputs$SmoothedTrails,
    advancedloggingparameters = loggingparameters()
  )
```

::: notes
Notas.
:::

## Corte de árvores {.smaller .scrollable}

Bla.

```{r mappost}
#| echo: true
FelledTrees <- getgeometry(inventory, TreePolygon) %>% st_set_crs(crs)
base + geom_sf(data = st_as_sf(SecondaryTrails$SmoothedTrails)) + geom_sf(data = FelledTrees)
```

::: notes
Notas.
:::

## Quantificar os volumes registrados

Calcule o volume de madeira colhida em árvores saudáveis exploradas para madeira e nas árvores ocas, se elas também forem colhidas para lenha.

```{r timberv}
#| echo: true
TimberV <- timberharvestedvolume(
  inventory, 
  scenario = "manual", 
  fuel = "2",
  advancedloggingparameters = loggingparameters()
)
inventory <- TimberV$inventory
TimberV[-1]
```

::: notes
Notas.
:::

## Quantificar os volumes registrados

Os detalhes da produção por espécie estão no inventário.

```{r timbervsp}
#| echo: true
TimberV$inventory %>% 
  filter(DeathCause == "cut") %>% 
  group_by(CommercialName) %>% 
  summarise(
    trees_n = n(), 
    volume = sum(TimberLoggedVolume), 
    CommercialLevel = unique(CommercialLevel)
  )
```

::: notes
Notas.
:::

# Para saber mais

Texto breve

::: notes
Notas.
:::

## Uma única simulação {.smaller}

Todas as etapas de simulação podem ser incluídas em uma única função para economizar tempo.

```{r single}
#| echo: true
#| cache: true
Rslt <- loggingsimulation1(
  Paracou6_2016,
  plotmask = PlotMask, 
  topography = DTMParacou,
  creekverticaldistance = CreekDistances$distvert,
  creekhorizontaldistance = CreekDistances$disthorz,
  speciescriteria = SpeciesCriteria,
  volumeparameters = ForestZoneVolumeParametersTable,
  scenario = "manual",
  objective = 30,
  fuel = "0", 
  winching = "2", 
  directionalfelling = "2", 
  diversification = TRUE, 
  specieslax = FALSE, 
  objectivelax = TRUE,
  crowndiameterparameters = ParamCrownDiameterAllometry,
  advancedloggingparameters = loggingparameters()
)
```

Várias simulações podem ser executadas pela função `loggingsimulation()` para levar em conta a estocasticidade com o argumento `iter` (número de simulações) e `cores` (número de núcleos de computador usados para paralelizar o cálculo).

::: notes
Notas.
:::

## Resultados

Retorna um resumo das saídas da função de simulação de registro.

```{r res}
#| echo: true
try(loggingsummary1(Rslt))
```

::: notes
Notas.
:::

## Cenários

Os cenários reúnem os principais parâmetros de gerenciamento.

Eles são usados para definir a área explorável, as árvores a serem cortadas e a modelagem de trilhas secundárias.

*Mais.*

::: notes
Notas.
:::

## Cenários {.smaller}

As colunas são:

-   `Type`: O nome do cenário.
-   `SpatialDataType`: o tipo de dados espaciais (Lidar ou SRTM).
-   `Objective`: Volume objetivo por hectare.
-   `Diversification`: Permitir o corte de outras espécies além das principais espécies comerciais.
-   `Winching`: Método de guincho. Sem cabo ou garra = “0”, somente cabo = “1”, garra + cabo = “2”.
-   `DirectionalFelling`: “0” = não utilizado, ‘1’ = apenas para evitar danos a árvores futuras e de reserva, ‘2’ = evitar danos a árvores futuras e de reserva + orientação da trilha.

Todas as funções permitem `scenario = “manual”`: nesse caso, todos os argumentos devem ser adicionados manualmente. Seu nome é o mesmo das colunas.

::: notes
Notas.
:::

## Cenários

`LogingLab` inclui cenários predefinidos que correspondem a diferentes versões de registro de impacto reduzido.

```{r scenarios}
#| echo: true
ScenariosTable
```

# Conclusão

Texto breve

::: notes
Notas.
:::

## Referências

